#!/bin/bash

if [ "$MASTER_CHEF_CONFIG" = "" ]; then
  MASTER_CHEF_CONFIG="/opt/master-chef/etc/local.json"
fi

STATUS_FILE="/opt/master-chef/var/last/result"
LOG_FILE="/opt/master-chef/var/last/log"
REPOS_STATUS_FILE="/opt/master-chef/var/last/repos.json"
FILE_OWNER="<%= @user %>"
HOOK_DIR="$(mktemp -d)"
mkdir $HOOK_DIR/all
mkdir $HOOK_DIR/ok
mkdir $HOOK_DIR/failed

OPTS="-c /opt/master-chef/etc/solo.rb <%= @logging[:command_line] %>"

log() {
  echo $1 | tee $STATUS_FILE
  sudo chown $FILE_OWNER $STATUS_FILE
}

run_hooks() {
  for i in $(ls $HOOK_DIR/$1 || true); do
    log "Running hook $i/$i"
    sudo $HOOK_DIR/$1/$i
    if [ "$?" != 0 ]; then
      log "WARN : Hook failed $i"
    fi
  done
}

log "Starting chef using omnibus at `date`"

if [ "$DRY_RUN" = 1 ]; then
  echo "Running in dry run mode"
  OPTS="$OPTS --why-run"
fi

if [ -f /opt/master-chef/etc/http_proxy ]; then
  proxy=$(cat /opt/master-chef/etc/http_proxy)
  log "Using proxy $proxy"
  export http_proxy=$proxy
  export https_proxy=$proxy
fi

(
  HOOK_DIR="$HOOK_DIR" REPOS_STATUS_FILE="$REPOS_STATUS_FILE" MASTER_CHEF_CONFIG="$MASTER_CHEF_CONFIG" sudo -E /opt/chef/bin/chef-solo $OPTS
  if [ "$?" = 0 ]; then
    run_hooks ok
    run_hooks all
    log "Chef run OK at `date` on `hostname`"
  else
    run_hooks failed
    run_hooks all
    log "Chef run FAILED at `date` on `hostname`"
  fi
  rm -rf $HOOK_DIR
) | tee $LOG_FILE

sudo chown $FILE_OWNER $LOG_FILE
cat $STATUS_FILE | grep OK > /dev/null
